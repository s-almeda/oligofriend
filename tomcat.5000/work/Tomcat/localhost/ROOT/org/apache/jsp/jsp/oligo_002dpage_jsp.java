/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2018-12-11 12:25:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class oligo_002dpage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/Users/Sarah/Documents/COMPBIOFINAL/tutorial/oligofriend/target/repo/jstl/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153399482000L));
    _jspx_dependants.put("file:/Users/Sarah/Documents/COMPBIOFINAL/tutorial/oligofriend/target/repo/jstl/jstl/1.2/jstl-1.2.jar", Long.valueOf(1544531119000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!doctype html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("    <head>\n");
      out.write("\n");
      out.write("        <meta charset=\"utf-8\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("\n");
      out.write("\n");
      out.write("        <!-- Material Design for Bootstrap fonts and icons -->\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons\">\n");
      out.write("\n");
      out.write("        <!-- Material Design for Bootstrap CSS -->\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://unpkg.com/bootstrap-material-design@4.1.1/dist/css/bootstrap-material-design.min.css\" integrity=\"sha384-wXznGJNEXNG1NFsbm0ugrLFMQPWswR3lds2VeinahP8N0zJw9VWSopbjv2x7WCvX\" crossorigin=\"anonymous\">\n");
      out.write("\n");
      out.write("\n");
      out.write("        <link rel='stylesheet' href='webjars/bootstrap/3.2.0/css/bootstrap.min.css'>\n");
      out.write("        <script src=\"../js/bootstrap.min.js\"></script>\n");
      out.write("        <style>\n");
      out.write("          body {\n");
      out.write("            padding-top: 20px;\n");
      out.write("            padding-left: 60px ;\n");
      out.write("            padding-right: 60px;\n");
      out.write("            padding-bottom: 60px;\n");
      out.write("\n");
      out.write("          }\n");
      out.write("        </style>\n");
      out.write("\n");
      out.write("\n");
      out.write("        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n");
      out.write("        <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("    </head>\n");
      out.write("\n");
      out.write("    <body>\n");
      out.write("\n");
      out.write("    <h1 class=\"display-2\">Oligo Friend </h1>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    <div class=\"px-2\">\n");
      out.write("        <!--<h2 class=\"p-3\">Upload a FASTA File...</h2>-->\n");
      out.write("\n");
      out.write("         <div class=\"container\">\n");
      out.write("             <div class=\"panel panel-default\">\n");
      out.write("\n");
      out.write("                 <div class=\"panel-heading\">Upload a FASTA File...</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("                 <!div class=\"col-6\">\n");
      out.write("\n");
      out.write("                    <!--File Upload Form -->\n");
      out.write("\n");
      out.write("                    <form action=\"/oligo\" method=\"post\" id=\"uploadFASTAFile\" role=\"form\" class=\"needs-validation\" novalidate enctype='multipart/form-data'>\n");
      out.write("                        <input type=\"hidden\" id=\"fileOrText1\" name=\"fileOrText\" value=\"file\">\n");
      out.write("\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <div class=\"col-sm-offset-2 col-sm-10\">\n");
      out.write("                                <label class=\"file-upload btn btn-primary\">\n");
      out.write("                                    Browse ... <input type=\"file\" name=\"file\" />\n");
      out.write("                                </label>\n");
      out.write("                                <button type=\"submit\" class=\"btn btn-primary btn-lg\" onclick=\"handleClick();\">\n");
      out.write("                                    <span class=\"glyphicon glyphicon-arrow-up\"></span> Upload\n");
      out.write("\n");
      out.write("                                </button>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("                        <br></br>\n");
      out.write("                        <br></br>\n");
      out.write("\n");
      out.write("                        <!-- sizes --\n");
      out.write("\n");
      out.write("                        <div class=\"panel panel-default\">\n");
      out.write("                            <div class=\"panel-heading\">Sequence Parameters:</div>\n");
      out.write("                            <div class=\"panel-body\">\n");
      out.write("\n");
      out.write("                                    <div class=\"row justify-content-md-center\">\n");
      out.write("                                        <div class=\"col-sm\">\n");
      out.write("                                            <label for=\"min_s\">Mininum Oligo Size</label>\n");
      out.write("                                            <input type=\"text\" class=\"form-control\" placeholder=\"Mininum Oligo Size\" value=\"90\" id=\"min_s\" required>\n");
      out.write("                                        </div>\n");
      out.write("                                        <div class=\"col-sm\">\n");
      out.write("                                            <label for=\"max_s\">Maximum Oligo Size</label>\n");
      out.write("                                            <input type=\"text\" class=\"form-control\" placeholder=\"Maximum Oligo Size\" value=\"100\"  id=\"max_s\" required>\n");
      out.write("                                        </div>\n");
      out.write("                                        <div class=\"col-sm\">\n");
      out.write("                                            <label for=\"min_o\">Mininum Overlap Size</label>\n");
      out.write("                                            <input type=\"text\" class=\"form-control\" placeholder=\"Minimum Overlap Size\" value=\"25\"  id=\"min_o\" required>\n");
      out.write("                                        </div>\n");
      out.write("                                        <div class=\"col-sm\">\n");
      out.write("                                            <label for=\"max_o\">Maxmimum Overlap Size</label>\n");
      out.write("                                            <input type=\"text\" class=\"form-control\" placeholder=\"Maximum Overlap Size\" value=\"60\"  id=\"max_o\"  required>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <!--end of sizes-->\n");
      out.write("                    </form>\n");
      out.write("                 </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("                 <!--Text Input Form -->\n");
      out.write("                 <div class=\"panel panel-default\">\n");
      out.write("                     <div class=\"panel-heading\">...Or Copy and Paste Sequence (FASTA format) Here</div>\n");
      out.write("                     <div class = \"panel-body\">\n");
      out.write("                     <form action =\"/oligo\" method = \"post\" id=\"getGreetingText\" role=\"form\">\n");
      out.write("\n");
      out.write("                         <div class = \"panel-body\">\n");
      out.write("                             <input type=\"hidden\" id=\"fileOrText2\" name=\"fileOrText\" value=\"text\">\n");
      out.write("                             <!div class=\"col-6\">\n");
      out.write("                                 <div class=\"form-group\">\n");
      out.write("                                    <!-- <label for=\"exampleFormControlTextarea1\"> </label>-->\n");
      out.write("                                     <textarea name=\"textInput\" class=\"form-control\" required=\"true\" id=\"exampleFormControlTextarea1\" rows=\"6\"  placeholder=\"Paste FASTA sequence here\"></textarea>\n");
      out.write("                                 </div>\n");
      out.write("\n");
      out.write("                                 <div align=\"right\">\n");
      out.write("                                     <button type=\"submit\" class=\"btn btn-primary btn-lg\" onclick=\"handleClick()\">\n");
      out.write("                                     Submit Text\n");
      out.write("                                     <span class=\"glyphicon glyphicon-option-horizontal\"></span>\n");
      out.write("\n");
      out.write("                                 </button>\n");
      out.write("                                 </div>\n");
      out.write("\n");
      out.write("                         </div>\n");
      out.write("\n");
      out.write("                        <!/div>\n");
      out.write("\n");
      out.write("                         <!-- sizes --\n");
      out.write("\n");
      out.write("                         <div class=\"panel panel-default\">\n");
      out.write("                             <div class=\"panel-heading\">Sequence Parameters:</div>\n");
      out.write("                             <div class=\"panel-body\">\n");
      out.write("\n");
      out.write("                                     <div class=\"row justify-content-md-center\">\n");
      out.write("                                         <div class=\"col-sm\">\n");
      out.write("                                             <label for=\"min_s\">Mininum Oligo Size</label>\n");
      out.write("                                             <input type=\"text\" class=\"form-control\" placeholder=\"Mininum Oligo Size\" value=\"90\" id=\"min_s\" required>\n");
      out.write("                                         </div>\n");
      out.write("                                         <div class=\"col-sm\">\n");
      out.write("                                             <label for=\"max_s\">Maximum Oligo Size</label>\n");
      out.write("                                             <input type=\"text\" class=\"form-control\" placeholder=\"Maximum Oligo Size\" value=\"100\"  id=\"max_s\" required>\n");
      out.write("                                         </div>\n");
      out.write("                                         <div class=\"col-sm\">\n");
      out.write("                                             <label for=\"min_o\">Mininum Overlap Size</label>\n");
      out.write("                                             <input type=\"text\" class=\"form-control\" placeholder=\"Minimum Overlap Size\" value=\"25\"  id=\"min_o\" required>\n");
      out.write("                                         </div>\n");
      out.write("                                         <div class=\"col-sm\">\n");
      out.write("                                             <label for=\"max_o\">Maxmimum Overlap Size</label>\n");
      out.write("                                             <input type=\"text\" class=\"form-control\" placeholder=\"Maximum Overlap Size\" value=\"60\"  id=\"max_o\"  required>\n");
      out.write("                                         </div>\n");
      out.write("                                     </div>\n");
      out.write("\n");
      out.write("                             </div>\n");
      out.write("                         </div>\n");
      out.write("                         <!--end of sizes-->\n");
      out.write("\n");
      out.write("                     </form>\n");
      out.write("                 </div>\n");
      out.write("                 </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("            <!/div>\n");
      out.write("         </div>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    <!--RESULTS! -->\n");
      out.write("        <div id=\"finalResultDiv\">\n");
      out.write("\n");
      out.write("\n");
      out.write("            ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    <!-- WELCOME MESSAGE -->\n");
      out.write("\n");
      out.write("\n");
      out.write("    <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n");
      out.write("        <button type=\"submit\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n");
      out.write("            Close This\n");
      out.write("            <span aria-hidden=\"true\">&times;</span>\n");
      out.write("        </button>\n");
      out.write("        <h1 class=\"display-3\">Hello friend!</h1>\n");
      out.write("\n");
      out.write("        <h4 class=\"display-4\">This is Oligo Friend, an online tool for breakpoint and overlap visualization.</h4>\n");
      out.write("        <hr class=\"my-4\">\n");
      out.write("        <p class=\"text-sm-left\">Created by Sarah Almeda, Computer Science Major at TCNJ<br> for Dr. Papamichail's Algorithms in Computational Biology Course.<br> This project funded by CRA-W CREU Fall 2018- Spring 2019. <br></p>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                ");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /jsp/oligo-page.jsp(189,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty finalResult}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                    <h3>Results</h3>\n");
          out.write("                    <br>\n");
          out.write("                    <p>\n");
          out.write("                    ");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fwhen_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("\n");
          out.write("                    </p>\n");
          out.write("\n");
          out.write("                    <form action =\"/oligo\" method = \"get\" id=\"return\" role=\"form\">\n");
          out.write("                        <input type=\"hidden\" id=\"returnFromResult\" name=\"nextJSP\" value=\"home\">\n");
          out.write("                        <div class=\"col order-12\">\n");
          out.write("\n");
          out.write("\n");
          out.write("                            <button type=\"submit\" class=\"btn btn-primary btn-lg\" onclick=\"handleClick();\">\n");
          out.write("\n");
          out.write("                                Another!\n");
          out.write("                                <span class=\"glyphicon glyphicon-option-horizontal\"></span>\n");
          out.write("\n");
          out.write("                            </button>\n");
          out.write("\n");
          out.write("                        </div>\n");
          out.write("                    </form>\n");
          out.write("\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fwhen_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fwhen_005f0);
      // /jsp/oligo-page.jsp(193,20) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("result");
      // /jsp/oligo-page.jsp(193,20) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/jsp/oligo-page.jsp(193,20) '${finalResult}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${finalResult}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("                        <span>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${result}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span>\n");
            out.write("                        <br></br>\n");
            out.write("                    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                    <div id= \"emptyInputError\" class=\"alert alert-info\">\n");
          out.write("                        <em>No results to show</em>\n");
          out.write("                    </div>\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
